#!/usr/bin/env bash
# Install some specific packages directly from GitHub. Specifically:
#
# - docker-compose
# - hugo
# - neovim (latest)
# - sad
#
# Usage `install_github_packages`

set -euo pipefail
IFS=$'\n\t'
export DEBIAN_FRONTEND=noninteractive

echo_stderr() {
  >&2 echo "${@}"
}

get_latest_release_url() {
  local repo="$1"
  local match="$2"

  local release_json_url="https://api.github.com/repos/${repo}/releases/latest"
  curl --silent "${release_json_url}" | jq -r '.assets[].browser_download_url' | grep "${match}" | head -n 1
}

install_docker_compose() {
  local url="$(get_latest_release_url 'docker/compose' 'linux-x86_64')"
  if [[ -z "${url}" ]]; then
    echo_stderr "Could not find url"
    exit 2
  fi
  local install_location="$HOME/.local/bin"
  mkdir -p "${install_location}"
  echo "Downloading docker-compose"
  wget --quiet -O "${install_location}/docker-compose" "${url}"
  chmod +x "${install_location}/docker-compose"
  echo "docker-compose installed"
}

install_hugo() {
  local url="$(get_latest_release_url 'gohugoio/hugo' 'hugo_extended.*Linux-64bit\.deb')"
  if [[ -z "${url}" ]]; then
    echo_stderr "Could not find url"
    exit 2
  fi
  pushd /tmp > /dev/null
  wget --quiet -O hugo.deb "${url}"
  echo "Installing hugo (requires sudo)"
  sudo dpkg -i hugo.deb
  rm hugo.deb
  echo "Generating bash completion"
  mkdir -p "$HOME/.local/completion.d"
  hugo gen autocomplete --completionfile="$HOME/.local/completion.d/hugo_completion"
  popd > /dev/null
}

install_sad() {
  local url="$(get_latest_release_url 'ms-jpq/sad' 'x86_64-unknown-linux-gnu.deb')"
  if [[ -z "${url}" ]]; then
    echo_stderr "Could not find url"
    exit 2
  fi
  pushd /tmp > /dev/null
  wget -O sad.deb "${url}"
  echo "Installing sad (requires sudo)"
  sudo dpkg -i sad.deb
  rm sad.deb
  popd > /dev/null
}

install_neovim_stable() {
  local vim_path="$HOME/.local/bin/nvim"

  echo "Installing neovim stable"
  mkdir -p "$(dirname ${vim_path})"
  wget "https://github.com/neovim/neovim/releases/download/stable/nvim.appimage" \
    --quiet --output-document "$vim_path"
  chmod +x "$vim_path"

  if [[ -n "${IS_DOCKER:-}" ]]; then
    local vim_appimage_dir_path="$HOME/.local/appimages/nvim"
    echo "Expanding neovim AppImage"
    mkdir -p "${vim_appimage_dir_path}"
    (
      cd "${vim_appimage_dir_path}"
      mv "${vim_path}" .
      "${vim_appimage_dir_path}/nvim" --appimage-extract > /dev/null
      ln -s "${vim_appimage_dir_path}/squashfs-root/AppRun" "${vim_path}"
    )
  fi

  sudo update-alternatives --install /usr/bin/ex ex "${vim_path}" 110
  sudo update-alternatives --install /usr/bin/vi vi "${vim_path}" 110
  sudo update-alternatives --install /usr/bin/view view "${vim_path}" 110
  sudo update-alternatives --install /usr/bin/vim vim "${vim_path}" 110
  sudo update-alternatives --install /usr/bin/vimdiff vimdiff "${vim_path}" 110
}

main() {
  . "$HOME/.profile.local"

  install_docker_compose
  install_hugo
  install_neovim_stable
  install_sad
}

main
