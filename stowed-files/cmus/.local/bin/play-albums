#!/usr/bin/env bash
[[ "$TRACE" ]] && set -o xtrace

set -o errexit
set -o nounset
set -o pipefail

# shellcheck disable=SC2016
BEET_FORMAT_STRING='$mb_albumid|$original_year|%left{$albumartist,40}|%left{$album%aunique{albumtype albumdisambig label year catalognum},40}|$genre'
BEET_HEADER_STRING='ID|Year|Artist|Album|Genre'

FZF_ARGS=(
  --header-lines 1
  --height 80%
  --layout=reverse
  --multi
  -0
  --with-nth 2..
  --accept-nth 1
)

main() {
  cmus_status=$(cmus-remote --raw status)
  album_results="$(echo "${BEET_HEADER_STRING}"; beet ls -f"$BEET_FORMAT_STRING" -a "$@" added- albumartist+)"
  album_ids=$(echo "${album_results}" | \
    column -t -s '|' | \
    fzf "${FZF_ARGS[@]}")

  if [ -z "$album_ids" ]; then
    echo "No albums found"
    return 1
  fi

  query=""
  for album_id in $album_ids; do
    query="$query, mb_albumid:${album_id}"
  done

  # Remove initial ', '
  query=$(echo "$query" | cut -c3-)

  num_albums=$(wc -l <<< "$album_ids")
  echo "Playing $num_albums albums"

  # Switch to queue view
  cmus-remote --raw 'view queue'

  # TODO: Add --args in order to add `-c` for clearing, then make parameterized
  # shellcheck disable=SC2086
  beet play -y $query year- album- track+

  # Wait a beat in order to make sure cmus has queued the album
  sleep 2

  if grep -qE "^status (paused|playing)" <<< "$cmus_status"; then
    # cmus was already playing
    cmus-remote --play && cmus-remote --next
  else
    cmus-remote --play
  fi
}

if cmus-remote --raw status > /dev/null 2>&1; then
  if [[ -z "$*" ]]; then
    main "added:-2w.."
  else
    main "$@"
  fi
else
  echo "cmus not running"
  exit 1
fi
