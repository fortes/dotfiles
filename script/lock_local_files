#!/usr/bin/env bash
# Don't track changes to .local files, for easy customization
#
# Usage: lock_local_files [--dry-run]

set -euo pipefail
IFS=$'\n\t'

lock_local_files() {
  local dry_run=''

  while (("$#")); do
    case "$1" in
      --dry-run)
        dry_run=1
        shift
        ;;
      *)
        >&2 echo "⨯ Unknown argument: $1"
        exit 1
        ;;
    esac
  done

  if [[ -n "${dry_run}" ]]; then
    2>&1 echo -e "⚠️\033[1;33m Dry run, no modifications will be made\033[0m"
  else
    echo "Locking .local files…"
  fi
  if git rev-parse --is-inside-work-tree &> /dev/null; then
    for local_file in $(git ls-files | grep -e '\.local$'); do
      echo -n "… ${local_file} Checking"
      if ! git locked | grep --quiet --fixed-strings "$local_file"; then
        if [[ -n "${dry_run}" ]]; then
          echo -e "\r\033[K☐ ${local_file} Would be locked"
          continue
        fi
        git lock "$local_file"
        echo -e "\r\033[K✓ ${local_file} Locked"
      else
        echo -e "\r\033[K✓ ${local_file} already locked"
      fi
    done
  else
    >&2 echo "⨯ Not in a git repo"
    exit 1
  fi
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  lock_local_files "${@}"
fi
