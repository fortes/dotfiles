#!/usr/bin/env bash
# Set node to LTS and install global packages
#
# Usage: install_node_packages

set -euo pipefail
IFS=$'\n\t'

PACKAGES=(
  @anthropic-ai/claude-code
  @github/copilot
  @google/gemini-cli
  @openai/codex
  bash-language-server
  corepack@latest
  cssmodules-language-server
  deno@^2.5
  dockerfile-language-server-nodejs
  eslint
  fkill-cli
  neovim
  npm
  npm-check-updates
  prettier
  rome
  tsx
  typescript
  typescript-language-server
  vim-language-server
  vscode-langservers-extracted
  yaml-language-server
)

# shellcheck source=script/lib.sh
. "$(dirname "${BASH_SOURCE[0]}")/lib.sh"

install_node_packages() {
  if ! command_exists fnm; then
    >&2 echo "⨯ fnm not installed"
    exit 1
  fi

  echo "Installing node LTS …"

  # Use --arch arm64 when running on aarch64, otherwise fnm doesn't
  # auto-detect (happens on Docker on MacOS)
  if [[ "$(uname -m)" == "aarch64" ]]; then
    fnm install --lts --arch arm64
  else
    fnm install --lts
  fi

  echo "Setting node version to LTS …"
  fnm default lts-latest

  # Pick up `fnm`-provided paths for node/npm
  eval "$(fnm env)"

  echo "Installing global node packages …"
  npm install --global --fund false "${PACKAGES[@]}"
  echo "Node packages installed!"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  install_node_packages "${@}"
fi
