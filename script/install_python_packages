#!/usr/bin/env bash
# Install python packages via `uv`
#
# Usage: install_python_packages

set -euo pipefail
IFS=$'\n\t'

declare dotfiles_root
dotfiles_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# Make sure to load `command_exists` helper as well as local paths
# shellcheck source=./stowed-files/bash/.profile
. "${dotfiles_root}/stowed-files/bash/.profile"

UVX_PACKAGES=(
  # Must force python version due to dependency conflict
  "aider-chat --python python3.12"
  argcomplete
  # Requires additional dependencies due to plugins
  "beets --with requests --with pylast --with beets[embedart,fetchart,lyrics,lastgenre,plexupdate]"
  epy-reader
  files-to-prompt
  llm
  pyright
  ruff
  streamdown
  vim-vint
)

VENV_LIBRARIES=(
  neovim
)

install_python_packages() {
  declare -r venv_path="$HOME/.local/venv"

  if ! command_exists pipx; then
    >&2 echo "⨯ pipx not installed!"
    exit 1
  fi

  if ! command_exists uv; then
    >&2 echo "⨯ uv not installed, installing"
    pipx install --force uv
  fi

  echo "Installing global uvx packages …"
  for package in "${UVX_PACKAGES[@]}"; do
    # Split package spec into array for safe expansion
    # shellcheck disable=SC2086
    uv tool install --quiet --force --refresh ${package}
  done
  echo "uvx packages installed!"

  if [[ ! -d "${venv_path}" ]]; then
    echo "Creating default venv …"
    python3 -m venv "${venv_path}"
    echo "Default venv created!"
  fi

  # shellcheck source=/dev/null
  . "${venv_path}/bin/activate"

  echo "Installing venv libraries …"
  "${venv_path}/bin/python" -m pip install --quiet --upgrade "${VENV_LIBRARIES[@]}"
  echo "venv libraries installed!"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  install_python_packages "${@}"
fi
